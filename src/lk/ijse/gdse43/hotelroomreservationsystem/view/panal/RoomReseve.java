/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lk.ijse.gdse43.hotelroomreservationsystem.view.panal;

import java.awt.Color;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import lk.ijse.gdse43.hotelreservationsystem.Controller.GuestController;
import lk.ijse.gdse43.hotelreservationsystem.Controller.ReservationController;
import lk.ijse.gdse43.hotelreservationsystem.core.dto.GuestDTO;
import lk.ijse.gdse43.hotelreservationsystem.core.dto.ReservationDTO;

/**
 *
 * @author user
 */
public class RoomReseve extends javax.swing.JPanel {

    /**
     * Creates new form RoomReseve
     */
    public RoomReseve() {
        initComponents();
        getAllids();
    }

    /*RoomReseve(String Id,String nic,String guestId,String name,String roomId,String checkIn,String checkOut,String price){
        initComponents();
        textreservationid1.setText(Id);
        textnic.setText(nic);
        textguestId.setText(guestId);
        textname.setText(name);
        textroomid.setText(roomId);
        textin.setText(checkIn);
        textout.setText(checkOut);
        textprice.setText(price);
    
    }*/
    RoomReseve(String id, String name) {
        initComponents();
        textguestId.setText(id);
        textname.setText(name);
        btnadd1.setEnabled(false);
        lbl_viewmassage.setForeground(Color.red);
        lbl_viewmassage.setText("Please Fill The Data And Press Save Button");

    }

    RoomReseve(String checkin, String checkout, String roomId, double price) {
        initComponents();
        getAllids();
        textroomid.setText(roomId);
        textprice.setText("" + price);
        textin.setText(checkin);
        textout.setText(checkout);
        btnadd1.setEnabled(false);
        lbl_viewmassage.setForeground(Color.red);
        lbl_viewmassage.setText("Please Fill The Data And Press Save Button");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanal = new javax.swing.JPanel();
        labelroomreseve = new javax.swing.JLabel();
        labelguestid = new javax.swing.JLabel();
        labelreservartionid = new javax.swing.JLabel();
        labelprice = new javax.swing.JLabel();
        labelroomid = new javax.swing.JLabel();
        labelchecin = new javax.swing.JLabel();
        labelcheckout = new javax.swing.JLabel();
        textroomid = new javax.swing.JTextField();
        textnic = new javax.swing.JTextField();
        textprice = new javax.swing.JTextField();
        btnnewguest = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        amila = new javax.swing.JTable();
        btnreload = new javax.swing.JButton();
        textguestId = new javax.swing.JTextField();
        textin = new javax.swing.JTextField();
        textout = new javax.swing.JTextField();
        labelguestid1 = new javax.swing.JLabel();
        labelname = new javax.swing.JLabel();
        textname = new javax.swing.JTextField();
        btnadd1 = new javax.swing.JButton();
        textreservationid1 = new javax.swing.JTextField();
        btnsave = new javax.swing.JButton();
        lbl_viewmassage = new javax.swing.JLabel();

        labelroomreseve.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        labelroomreseve.setForeground(new java.awt.Color(255, 102, 102));
        labelroomreseve.setText(" Room Reseve");

        labelguestid.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        labelguestid.setForeground(new java.awt.Color(102, 102, 255));
        labelguestid.setText("Guest Id");

        labelreservartionid.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        labelreservartionid.setForeground(new java.awt.Color(102, 102, 255));
        labelreservartionid.setText("Reservation Id");

        labelprice.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        labelprice.setForeground(new java.awt.Color(102, 102, 255));
        labelprice.setText("Room Price");

        labelroomid.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        labelroomid.setForeground(new java.awt.Color(102, 102, 255));
        labelroomid.setText("Room Id");

        labelchecin.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        labelchecin.setForeground(new java.awt.Color(102, 102, 255));
        labelchecin.setText("Check_In");

        labelcheckout.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        labelcheckout.setForeground(new java.awt.Color(102, 102, 255));
        labelcheckout.setText("Check_Out");

        textroomid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textroomidActionPerformed(evt);
            }
        });

        textnic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textnicActionPerformed(evt);
            }
        });
        textnic.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textnicKeyPressed(evt);
            }
        });

        btnnewguest.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnnewguest.setForeground(new java.awt.Color(102, 102, 255));
        btnnewguest.setText("New Guest");
        btnnewguest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnnewguestActionPerformed(evt);
            }
        });

        amila.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Reservation Id", "Guest Id", "Room Id", "Check In", "Check Out", "Price"
            }
        ));
        jScrollPane1.setViewportView(amila);

        btnreload.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnreload.setForeground(new java.awt.Color(102, 102, 255));
        btnreload.setText("Reload");
        btnreload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnreloadActionPerformed(evt);
            }
        });

        labelguestid1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        labelguestid1.setForeground(new java.awt.Color(102, 102, 255));
        labelguestid1.setText("NIC_Number");

        labelname.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        labelname.setForeground(new java.awt.Color(102, 102, 255));
        labelname.setText("Name");

        btnadd1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnadd1.setForeground(new java.awt.Color(102, 102, 255));
        btnadd1.setText("View Payment");
        btnadd1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnadd1MouseClicked(evt);
            }
        });
        btnadd1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnadd1ActionPerformed(evt);
            }
        });

        textreservationid1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textreservationid1ActionPerformed(evt);
            }
        });

        btnsave.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnsave.setForeground(new java.awt.Color(102, 102, 255));
        btnsave.setText("Save");
        btnsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsaveActionPerformed(evt);
            }
        });

        lbl_viewmassage.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N

        javax.swing.GroupLayout mainPanalLayout = new javax.swing.GroupLayout(mainPanal);
        mainPanal.setLayout(mainPanalLayout);
        mainPanalLayout.setHorizontalGroup(
            mainPanalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanalLayout.createSequentialGroup()
                .addGroup(mainPanalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanalLayout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(mainPanalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(mainPanalLayout.createSequentialGroup()
                                .addGroup(mainPanalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelreservartionid, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labelguestid1, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labelname, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(mainPanalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(mainPanalLayout.createSequentialGroup()
                                        .addGap(712, 712, 712)
                                        .addComponent(btnreload))
                                    .addGroup(mainPanalLayout.createSequentialGroup()
                                        .addGap(75, 75, 75)
                                        .addComponent(btnsave)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnnewguest)
                                        .addGap(18, 18, 18)
                                        .addGroup(mainPanalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(mainPanalLayout.createSequentialGroup()
                                                .addComponent(btnadd1)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(lbl_viewmassage, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 752, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(mainPanalLayout.createSequentialGroup()
                                .addGroup(mainPanalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelchecin, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labelroomid, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labelguestid, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labelcheckout, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labelprice, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(33, 33, 33)
                                .addGroup(mainPanalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(textprice, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textout, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textroomid, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textguestId, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textin, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textname, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textnic, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textreservationid1, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(mainPanalLayout.createSequentialGroup()
                        .addGap(548, 548, 548)
                        .addComponent(labelroomreseve, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(266, Short.MAX_VALUE))
        );
        mainPanalLayout.setVerticalGroup(
            mainPanalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelroomreseve)
                .addGap(31, 31, 31)
                .addGroup(mainPanalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanalLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(76, 76, 76)
                        .addComponent(btnreload))
                    .addGroup(mainPanalLayout.createSequentialGroup()
                        .addGroup(mainPanalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelreservartionid)
                            .addComponent(textreservationid1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(mainPanalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelguestid1)
                            .addComponent(textnic, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(mainPanalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(mainPanalLayout.createSequentialGroup()
                                .addGroup(mainPanalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelguestid)
                                    .addComponent(textguestId, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(30, 30, 30)
                                .addGroup(mainPanalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(labelname)
                                    .addComponent(textname, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(30, 30, 30)
                                .addGroup(mainPanalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(labelroomid)
                                    .addComponent(textroomid, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(30, 30, 30)
                                .addComponent(labelchecin))
                            .addComponent(textin, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(mainPanalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(mainPanalLayout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(labelcheckout))
                            .addGroup(mainPanalLayout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(textout, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(30, 30, 30)
                        .addGroup(mainPanalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelprice)
                            .addComponent(textprice, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(45, 45, 45)
                .addGroup(mainPanalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnnewguest)
                    .addComponent(btnadd1)
                    .addComponent(btnsave)
                    .addComponent(lbl_viewmassage, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(307, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnnewguestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnnewguestActionPerformed
        String roomId = textroomid.getText();
        String checkIn = textin.getText();
        String checkOut = textout.getText();
        String price = textprice.getText();
        GuestDetail g = new GuestDetail(roomId, checkIn, checkOut, price);

        g.setSize(mainPanal.getSize());
        mainPanal.removeAll();
        mainPanal.add(g);
        mainPanal.repaint();
        mainPanal.revalidate();

        /*ReservationnDTO reservation=new lk.ijse.gdse43.hotelreservationsystem.core.dto.ReservationnDTO(textreservationid.getText(),textguestname.getText(),textroomid.getText(),textin.getText(),textout.getText(),textprice.getText());
        boolean result=ReservationController.setAllReservation(reservation);
        if(result){
            JOptionPane.showMessageDialog(null,"ADDED !!!!");
        }else{
            JOptionPane.showMessageDialog(null,"NOT ADDED !!!!");
        }*/
    }//GEN-LAST:event_btnnewguestActionPerformed

    private void btnreloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnreloadActionPerformed

        try {
            ArrayList<ReservationDTO> list = ReservationController.getAllReservation();
            DefaultTableModel dtm = (DefaultTableModel) amila.getModel();
            dtm.setRowCount(0);

            for (ReservationDTO reservation : list) {
                Object[] rowData = {reservation.getR_id(), reservation.getGuest_id(), reservation.getRoom_id(), reservation.getCheck_in(), reservation.getCheck_out(), reservation.getPrice()};

                dtm.addRow(rowData);
            }

            // TODO add your handling code here:
        } catch (Exception ex) {
            Logger.getLogger(RoomReseve.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_btnreloadActionPerformed

    private void textnicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textnicActionPerformed
        try {
            // RoomReseve idNumber=new RoomReseve(textnic.getText());
            String idNumber = textnic.getText();
            GuestDTO id_name = ReservationController.getID_NAME(idNumber);
            if (id_name != null) {
                textguestId.setText(id_name.getGuest_id());
                textname.setText(id_name.getName());
            } else {
                JOptionPane.showMessageDialog(this, "no such Guest");
            }
            //textguestId.setText(id_name.getGuest_id());
            //textname.setText(id_name.getName());
        } catch (Exception ex) {

            Logger.getLogger(RoomReseve.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_textnicActionPerformed

    private void btnadd1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnadd1ActionPerformed

        String reservationId = textreservationid1.getText();
        String guest = textguestId.getText();
        String roomId = textroomid.getText();
        String date = textin.getText();
        String checkIn = textin.getText();
        String checkOut = textout.getText();

        Payment p = new Payment(reservationId, guest, roomId, date, checkIn, checkOut);
        p.setSize(mainPanal.getSize());
        mainPanal.removeAll();
        mainPanal.add(p);
        mainPanal.repaint();
        mainPanal.revalidate();

        /* try {
            ReservationDTO reservation=new ReservationDTO(textreservationid1.getText(),textguestId.getText(),textroomid.getText(),textin.getText(),textout.getText(),Double.parseDouble(textprice.getText()));
            boolean result= ReservationController.GetAllReservation(reservation);
            if(result){
                JOptionPane.showMessageDialog(null,"ADDED !!!!");
            }else{
                JOptionPane.showMessageDialog(null,"NOT ADDED !!!!");
            }
        } catch (Exception ex) {
               Logger.getLogger(RoomReseve.class.getName()).log(Level.SEVERE, null, ex);
        }*/

    }//GEN-LAST:event_btnadd1ActionPerformed

    private void textroomidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textroomidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textroomidActionPerformed

    private void textreservationid1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textreservationid1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textreservationid1ActionPerformed

    private void textnicKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textnicKeyPressed
        /*try {
            // RoomReseve idNumber=new RoomReseve(textnic.getText());
            String idNumber=textnic.getText();
            GuestDTO id_name = ReservationController.getID_NAME(idNumber);
            if(id_name!=null){
               textguestId.setText(id_name.getGuest_id());
            textname.setText(id_name.getName());  
            }else{
                JOptionPane.showMessageDialog(this, "no such Guest");
            }
            //textguestId.setText(id_name.getGuest_id());
            //textname.setText(id_name.getName());
        } catch (Exception ex) {
           
            Logger.getLogger(RoomReseve.class.getName()).log(Level.SEVERE, null, ex);
        }*/
    }//GEN-LAST:event_textnicKeyPressed

    private void btnadd1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnadd1MouseClicked

    }//GEN-LAST:event_btnadd1MouseClicked

    private void btnsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsaveActionPerformed
        try {
            ReservationDTO reservation = new ReservationDTO(textreservationid1.getText(), textguestId.getText(), textroomid.getText(), textin.getText(), textout.getText(), Double.parseDouble(textprice.getText()));
            boolean result = ReservationController.GetAllReservation(reservation);
            if (result) {
                JOptionPane.showMessageDialog(this, "Added ");
                btnadd1.setEnabled(true);
                lbl_viewmassage.setForeground(Color.green);
                lbl_viewmassage.setText("Please Press View Payment Button");
            } else {

                JOptionPane.showMessageDialog(this, "Please Fill Data And Press Save Button");
                lbl_viewmassage.setForeground(Color.red);
                lbl_viewmassage.setText("Wrong Data");
                btnadd1.setEnabled(false);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Please Fill Data And Press Save Button");
        }


    }//GEN-LAST:event_btnsaveActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable amila;
    private javax.swing.JButton btnadd1;
    private javax.swing.JButton btnnewguest;
    private javax.swing.JButton btnreload;
    private javax.swing.JButton btnsave;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelchecin;
    private javax.swing.JLabel labelcheckout;
    private javax.swing.JLabel labelguestid;
    private javax.swing.JLabel labelguestid1;
    private javax.swing.JLabel labelname;
    private javax.swing.JLabel labelprice;
    private javax.swing.JLabel labelreservartionid;
    private javax.swing.JLabel labelroomid;
    private javax.swing.JLabel labelroomreseve;
    private javax.swing.JLabel lbl_viewmassage;
    private javax.swing.JPanel mainPanal;
    private javax.swing.JTextField textguestId;
    private javax.swing.JTextField textin;
    private javax.swing.JTextField textname;
    private javax.swing.JTextField textnic;
    private javax.swing.JTextField textout;
    private javax.swing.JTextField textprice;
    private javax.swing.JTextField textreservationid1;
    private javax.swing.JTextField textroomid;
    // End of variables declaration//GEN-END:variables

    private void getAllids() {
        /* System.out.println("1");
        try {
            ArrayList<String> GuestId=GuestController.getAllIds();
            
            
            for (String id : GuestId) {
                combonicnumber.addItem(id);
                
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(RoomReseve.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(RoomReseve.class.getName()).log(Level.SEVERE, null, ex);
        }*/
    }
}
